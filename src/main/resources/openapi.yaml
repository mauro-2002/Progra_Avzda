openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
servers:
- url: /
paths:
  /users:
    post:
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Usuario registrado exitosamente
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Datos de entrada inválidos
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Correo ya registrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno del servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      summary: Registrar un nuevo usuario
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{id}/password:
    patch:
      operationId: updateUserPassword
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuccessResponse'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Contraseña actualizada exitosamente
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Datos de entrada inválidos
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No autorizado
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Prohibido (sin permisos suficientes)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuario no encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno del servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      security:
      - BearerAuth: []
      summary: Actualizar la contraseña de un usuario
      x-content-type: application/json
      x-accepts:
      - application/json

  /reportes:
    get:
      operationId: getAllReportes
      summary: Obtener todos los reportes
      description: Retorna una lista con todos los reportes existentes en el sistema.
      responses:
        "200":
          description: Lista de reportes obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReporteResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Prohibido (sin permisos suficientes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      operationId: createReporte
      summary: Crear un nuevo reporte
      description: Crea un reporte en el sistema con los datos proporcionados.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReporteRequest'
      responses:
        "201":
          description: Reporte creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporteResponse'
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Prohibido (sin permisos suficientes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflicto (por ejemplo, un título repetido u otra regla de negocio)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reportes/{id}:
    get:
      operationId: getReporteById
      summary: Obtener un reporte por ID
      description: Retorna el reporte correspondiente al ID proporcionado.
      parameters:
        - name: id
          in: path
          required: true
          description: Identificador único del reporte
          schema:
            type: string
      responses:
        "200":
          description: Reporte encontrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporteResponse'
        "400":
          description: ID inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Reporte no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      operationId: updateReport
      summary: Actualizar un reporte por ID
      description: Permite actualizar campos específicos de un reporte (por ejemplo, descripción, estado, imágenes, etc.).
      parameters:
        - name: id
          in: path
          required: true
          description: Identificador único del reporte a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportePatchRequest'
      responses:
        "200":
          description: Reporte actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporteResponse'
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Prohibido (sin permisos suficientes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Reporte no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflicto (por ejemplo, un cambio de estado no permitido)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      operationId: deleteReporte
      summary: Eliminar un reporte por ID
      description: Elimina el reporte identificado por el ID proporcionado.
      parameters:
        - name: id
          in: path
          required: true
          description: Identificador único del reporte a eliminar
          schema:
            type: string
      responses:
        "204":
          description: Reporte eliminado exitosamente
        "400":
          description: ID inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Prohibido (sin permisos suficientes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Reporte no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    UserRegistration:
      example:
        password: password
        fullName: fullName
        dateBirth: 1990-01-01
        email: email
        rol: user
      properties:
        email:
          format: email
          type: string
        password:
          description: "La contraseña del usuario (debe contener al menos un dígito,\
            \ una mayúscula y una minúscula)"
          minLength: 8
          pattern: "^(?=.\\d)(?=.[a-z])(?=.[A-Z]).$"
          type: string
        fullName:
          maxLength: 100
          type: string
        dateBirth:
          example: 1990-01-01
          format: date
          type: string
        rol:
          default: user
          enum:
          - user
          - admin
          type: string
      required:
      - email
      - fullName
      - password
      type: object
    PasswordUpdate:
      properties:
        currentPassword:
          description: Contraseña actual del usuario
          type: string
        newPassword:
          description: "Nueva contraseña del usuario (debe contener al menos un dí\
            gito, una mayúscula y una minúscula)"
          minLength: 8
          pattern: "^(?=.\\d)(?=.[a-z])(?=.[A-Z]).$"
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    SuccessResponse:
      example:
        message: Contraseña actualizada exitosamente
      properties:
        message:
          example: Contraseña actualizada exitosamente
          type: string
      required:
      - message
      type: object
    UserResponse:
      example:
        fullName: fullName
        id: id
        dateBirth: 2000-01-23
        email: email
        rol: rol
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string
        dateBirth:
          format: date
          type: string
        rol:
          type: string
      required:
      - email
      - fullName
      - id
      - rol
      type: object
    ErrorResponse:
      example:
        error: error
        message: message
      properties:
        error:
          type: string
        message:
          type: string
      required:
      - error
      - message
      type: object

    Ubicacion:
      type: object
      required:
        - latitud
        - longitud
      properties:
        latitud:
          type: number
          format: float
          description: "Latitud geográfica"
          example: 4.533333
        longitud:
          type: number
          format: float
          description: "Longitud geográfica"
          example: -75.681106

    ReporteRequest:
      type: object
      required:
        - titulo
        - descripcion
        - fechaCreacion
        - ubicacion
        - imagenes
      properties:
        titulo:
          type: string
          maxLength: 255
          description: "Título del reporte"
          example: "Alumbrado público dañado"
        descripcion:
          type: string
          description: "Descripción del problema"
          example: "La lámpara de la calle principal está apagada desde hace 2 días."
        fechaCreacion:
          type: string
          format: date-time
          description: "Fecha y hora en que se creó el reporte"
          example: "2025-03-26T14:30:00Z"
        ubicacion:
          $ref: "#/components/schemas/Ubicacion"
        imagenes:
          type: array
          description: "Lista de URL de imágenes asociadas al reporte"
          items:
            type: string
            format: uri
          example:
            - "https://mi-servidor.com/imagenes/reporte-1.jpg"
            - "https://mi-servidor.com/imagenes/reporte-2.jpg"
        estado:
          type: string
          description: "Estado inicial del reporte"
          enum:
            - Publicado
            - Verificado
            - Rechazado
            - Resuelto
          default: "Publicado"
          example: "Publicado"
        contadorImportancia:
          type: integer
          description: "Cantidad de veces que se marcó como importante"
          default: 0
          example: 5

    ReportePatchRequest:
      type: object
      description: "Datos opcionales para actualizar un reporte"
      properties:
        titulo:
          type: string
          maxLength: 255
          description: "Nuevo título del reporte"
          example: "Título actualizado"
        descripcion:
          type: string
          description: "Nueva descripción del reporte"
          example: "Descripción actualizada"
        ubicacion:
          $ref: "#/components/schemas/Ubicacion"
        imagenes:
          type: array
          description: "Lista de URL de imágenes asociadas al reporte (reemplaza las anteriores, puede estar vacía para eliminar todas)"
          items:
            type: string
            format: uri
          example:
            - "https://mi-servidor.com/imagenes/reporte-actualizado-1.jpg"
        estado:
          type: string
          description: "Estado actual del reporte (algunas transiciones pueden estar restringidas)"
          enum:
            - Publicado
            - Verificado
            - Rechazado
            - Resuelto
          example: "Verificado"
        contadorImportancia:
          type: integer
          description: "Actualizar la cantidad de veces que se marcó como importante"
          example: 10

    ReporteResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador único del reporte"
          example: "abc123"
        titulo:
          type: string
          description: "Título del reporte"
          example: "Alumbrado público dañado"
        descripcion:
          type: string
          description: "Descripción detallada del problema"
          example: "La lámpara de la calle principal está apagada desde hace 2 días."
        fechaCreacion:
          type: string
          format: date-time
          description: "Fecha y hora de creación del reporte"
          example: "2025-03-26T14:30:00Z"
        ubicacion:
          $ref: "#/components/schemas/Ubicacion"
        imagenes:
          type: array
          description: "Lista de URL de imágenes"
          items:
            type: string
            format: uri
          example:
            - "https://mi-servidor.com/imagenes/reporte123-1.jpg"
            - "https://mi-servidor.com/imagenes/reporte123-2.jpg"
        estado:
          type: string
          description: "Estado actual del reporte"
          enum:
            - Publicado
            - Verificado
            - Rechazado
            - Resuelto
          example: "Publicado"
        contadorImportancia:
          type: integer
          description: "Cantidad de veces que se marcó como importante"
          example: 5

  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
