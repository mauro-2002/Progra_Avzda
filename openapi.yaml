openapi: 3.0.3
info:
  title: "Plataforma de Seguridad Ciudadana API"
  description: "API para la gestión de reportes de incidentes y seguridad ciudadana."
  version: "1.0.0"

paths:
  /usuarios:
    post:
      summary: "Registro de usuario"
      description: "Permite registrar un nuevo usuario en la plataforma."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsuarioRequest"
      responses:
        "201":
          description: "Usuario registrado exitosamente."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsuarioResponse"
        "400":
          description: "Datos de entrada inválidos"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: "Correo ya registrado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: "Servicio no disponible"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios/{id}:
    put:
      summary: "Actualizacion de datos"
      description: "Permite al usuario actualizar sus datos personales."
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsuarioUpdateRequest"
      responses:
        "200":
          description: Datos actualizados correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        "400":
          description: "Datos de entrada inválidos"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: "Servicio no disponible"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: "Solicitud para eliminar la cuenta."
      description: "Solicituda para que la cuenta del usuario sea eliminada."
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Solicitud enviada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        "404":
          description: "Usuario no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: "Servicio no disponible"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /usuarios/{id}/notificaciones:
    get:
      summary: Obtener notificaciones de un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de notificaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificacionRespuesta"
        "404":
          description: "Usuario no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      summary: "Inicio de sesión"
      description: "Permite a un usuario autenticarse en la plataforma."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: "Inicio de sesión exitoso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginRespuesta"
        "401":
          description: "Credenciales incorrectas."
        "404":
          description: "Usuario no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: "Error interno del servidor"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "503":
          description: "Servicio no disponible"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/activar:
    post:
      summary: "Activar cuenta"
      description: "Permite activar la cuenta de un usuario con un código de verificación."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivarCuentaRequest"
      responses:
        "200":
          description: "Cuenta activada exitosamente."
        "400":
          description: "Código inválido o expirado."

  /auth/recuperar-password:
    post:
      summary: "Recuperar contraseña"
      description: "Envía un código de recuperación al correo del usuario."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecuperarPasswordRequest"
      responses:
        "200":
          description: "Correo de recuperación enviado exitosamente."
        "404":
          description: "Usuario no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset-password:
    post:
      summary: "Restablecer contraseña"
      description: "Permite cambiar la contraseña usando un código de recuperación."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        "200":
          description: "Contraseña restablecida exitosamente."
        "400":
          description: "Código inválido o expirado."

  /reportes:
    get:
      operationId: getAllReportes
      summary: Obtener todos los reportes
      description: Retorna una lista con todos los reportes existentes en el sistema.
      responses:
        "200":
          description: Lista de reportes obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReporteResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Prohibido (sin permisos suficientes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      operationId: createReporte
      summary: Crear un nuevo reporte
      description: Crea un reporte en el sistema con los datos proporcionados.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReporteRequest'
      responses:
        "201":
          description: Reporte creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporteResponse'
        "400":
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "403":
          description: Prohibido (sin permisos suficientes)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflicto (por ejemplo, un título repetido u otra regla de negocio)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /reportes/{id}:
      get:
        operationId: getReporteById
        summary: Obtener un reporte por ID
        description: Retorna el reporte correspondiente al ID proporcionado.
        parameters:
          - name: id
            in: path
            required: true
            description: Identificador único del reporte
            schema:
              type: string
        responses:
          "200":
            description: Reporte encontrado exitosamente
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReporteResponse'
          "400":
            description: ID inválido
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "401":
            description: No autorizado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "404":
            description: Reporte no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "500":
            description: Error interno del servidor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      patch:
        operationId: updateReport
        summary: Actualizar un reporte por ID
        description: Permite actualizar campos específicos de un reporte (por ejemplo, descripción, estado, imágenes, etc.).
        parameters:
          - name: id
            in: path
            required: true
            description: Identificador único del reporte a actualizar
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportePatchRequest'
        responses:
          "200":
            description: Reporte actualizado exitosamente
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReporteResponse'
          "400":
            description: Datos inválidos
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "401":
            description: No autorizado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "403":
            description: Prohibido (sin permisos suficientes)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "404":
            description: Reporte no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "409":
            description: Conflicto (por ejemplo, un cambio de estado no permitido)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "500":
            description: Error interno del servidor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

      delete:
        operationId: deleteReporte
        summary: Eliminar un reporte por ID
        description: Elimina el reporte identificado por el ID proporcionado.
        parameters:
          - name: id
            in: path
            required: true
            description: Identificador único del reporte a eliminar
            schema:
              type: string
        responses:
          "204":
            description: Reporte eliminado exitosamente
          "400":
            description: ID inválido
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "401":
            description: No autorizado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "403":
            description: Prohibido (sin permisos suficientes)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "404":
            description: Reporte no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          "500":
            description: Error interno del servidor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

  /notificaciones:
    post:
      summary: Generar notificacion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notificacion'
      responses:
        "200":
          description: Obtiene la notificacion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        "500":
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notificaciones/{id}/leer:
    patch:
      summary: Marcar notificación como leída
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Notificación marcada como leída
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificacionRespuesta"
        '404':
          description: Notificación no encontrada

  /admin/login:
    post:
      summary: "Inicio de sesión"
      description: "Permite a un usuario autenticarse en la plataforma."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLoginRequest'

      responses:
        '200':
          description: 'Inicio de sesión exitoso. Bienvenido Administrador'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: "Credenciales incorrectas."
        '404':
          description: "Administrador no encontrado."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: "Error interno del servidor."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: "Servicio no disponible."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/categories:
    get:
      summary: "Hacer una lista de las categorías."
      responses:
        '200':
          description: "Lista de categorías"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categorias'

    post:
      summary: "Crear una nueva categoría"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
      responses:
        '201':
          description: "Categoría creada exitósamente."

  /admin/categories/{id}:
    put:
      summary: "Editar una categoría"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaRequest'
      responses:
        '200':
          description: "Categoría actualizada exitósamente."

    delete:
        summary: "Eliminar una categoría (Se cambia de estado a inactiva)"
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '204':
            description: "Categoría eliminada exitosamente."

  /admin/reports/:
    get:
      summary: "Hacer una lista de todos los reportes"
      responses:
        '200':
          description: "Reportes disponibles"

  /admin/reports/{id}/verify:
    post:
      summary: "Verificar un reporte"
      parameters:
        - name: id
          in: path
          required: true
      responses:
        '200':
          description: "Reporte verificado exitósamente."

  /admin/reports/{id}/rejected:
    post:
      summary: "Rechazar un reporte con un motivo"
      parameters:
        - name: id
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '200':
          description: "Reporte rechazado exitósamente."



components:
  schemas:

    SuccessResponse:
      type: object
      required:
        - msg
      properties:
        msg:
          type: string

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string

    UsuarioRequest:
      type: "object"
      properties:
        nombre:
          type: "string"
          example: "Juan Pérez"
        email:
          type: "string"
          format: "email"
          example: "juan.perez@email.com"
        ciudad:
          type: "string"
          example: "Armenia - Qundio"
        direccion:
          type: "string"
          example: "Cll 20 # 26-22 Brr San Jose"
        password:
          type: "string"
          format: "password"
        telefono:
          type: "string"
          example: "+573205113628"
        rol:
          type: "string"
          enum:
            -"STANDAR"
            -"ADMIN"
          default: "STANDAR"
        status:
          type: "string"
          enum:
            - "Registrado"
            - "Activo"
            - "Eliminado"
          default: "Registrado"
      required:
        - correo
        - password


    UsuarioResponse:
      type: "object"
      properties:
        nombre:
          type: "string"
        email:
          type: "string"
        estado:
          type: "string"
          enum:
          - "Registrado"
          - "Activo"
          - "Eliminado"


    UsuarioUpdateRequest:
      type: "object"
      properties:
        NuevoNombre:
          type: string
        NuevaCiudad:
          type: string
        NuevoTelefono:
          type: string
        NuevaDireccion:
          type: string
        email:
          type: string


    LoginRequest:
      type: "object"
      properties:
        email:
          type: "string"
          format: "email"
        password:
          type: "string"
          format: "password"
      required:
        - "email"
        - "password"


    LoginRespuesta:
      type: "object"
      properties:
        token:
          type: "string"
          example: "eyJhbGciOiJIUzI1..."
        usuario:
          $ref: "#/components/schemas/UsuarioResponse"


    ActivarCuentaRequest:
      type: "object"
      properties:
        codigo:
          type: "string"
          example: "123456"
      required: "codigo"


    RecuperarPasswordRequest:
      type: "object"
      properties:
        email:
          type: "string"

    ResetPasswordRequest:
      type: "object"
      properties:
        codigo:
          type: "string"
        nuevaPassword:
          type: "string"
          format: "password"
      required: "codigo"


    ReporteRequest:
      type: object
      required:
        - titulo
        - descripcion
        - fechaCreacion
        - ubicacion
        - imagenes
      properties:
        titulo:
          type: string
          maxLength: 255
          description: "Título del reporte"
          example: "Alumbrado público dañado"
        descripcion:
          type: string
          description: "Descripción del problema"
          example: "La lámpara de la calle principal está apagada desde hace 2 días."
        fechaCreacion:
          type: string
          format: date-time
          description: "Fecha y hora en que se creó el reporte"
          example: "2025-03-26T14:30:00Z"

        ubicacion:
          $ref: "#/components/schemas/Ubicacion"
        imagenes:
          type: array
          description: "Lista de URL de imágenes asociadas al reporte"
          minItems: 1
          items:
            type: string
            format: uri
          example:
            - "https://mi-servidor.com/imagenes/reporte-1.jpg"
            - "https://mi-servidor.com/imagenes/reporte-2.jpg"
        estado:
          type: string
          description: "Estado inicial del reporte"
          enum:
            - Publicado
            - Verificado
            - Rechazado
            - Resuelto
          default: "Publicado"
          example: "Publicado"
        contadorImportancia:
          type: integer
          description: "Cantidad de veces que se marcó como importante"
          default: 0
          example: 5


    ReportePatchRequest:
      type: object
      description: "Datos opcionales para actualizar un reporte"
      properties:
        titulo:
          type: string
          maxLength: 255
          description: "Nuevo título del reporte"
          example: "Título actualizado"
        descripcion:
          type: string
          description: "Nueva descripción del reporte"
          example: "Descripción actualizada"
        fechaCreacion:
          type: string
          format: date-time
          description: "Fecha y hora en que se creó el reporte"
          example: "2025-03-26T15:00:00Z"
        ubicacion:
          $ref: "#/components/schemas/Ubicacion"
        imagenes:
          type: array
          description: "Lista de URL de imágenes asociadas al reporte"
          items:
            type: string
            format: uri
          example:
            - "https://mi-servidor.com/imagenes/reporte-actualizado-1.jpg"
        estado:
          type: string
          description: "Estado actual del reporte"
          enum:
            - Publicado
            - Verificado
            - Rechazado
            - Resuelto
          example: "Verificado"
        contadorImportancia:
          type: integer
          description: "Cantidad de veces que se marcó como importante"
          example: 10


    ReporteResponse:
      type: object
      properties:
        id:
          type: string
          description: "Identificador único del reporte"
          example: "abc123"
        titulo:
          type: string
          description: "Título del reporte"
          example: "Alumbrado público dañado"
        descripcion:
          type: string
          description: "Descripción detallada del problema"
          example: "La lámpara de la calle principal está apagada desde hace 2 días."
        fechaCreacion:
          type: string
          format: date-time
          description: "Fecha y hora de creación del reporte"
          example: "2025-03-26T14:30:00Z"
        ubicacion:
          $ref: "#/components/schemas/Ubicacion"
        imagenes:
          type: array
          description: "Lista de URL de imágenes"
          items:
            type: string
            format: uri
          example:
            - "https://mi-servidor.com/imagenes/reporte123-1.jpg"
            - "https://mi-servidor.com/imagenes/reporte123-2.jpg"
        estado:
          type: string
          description: "Estado actual del reporte"
          enum:
            - Publicado
            - Verificado
            - Rechazado
            - Resuelto
          example: "Publicado"
        contadorImportancia:
          type: integer
          description: "Cantidad de veces que se marcó como importante"


    Notificacion:
      type: object
      properties:
        id:
          type: string
          example: "66136f7b1c9d4400012f6c01"
        mensaje:
          type: string
          example: "Nuevo reporte de emergencia médica en tu zona"
        tipo:
          type: string
          enum: [ REPORTE_NUEVO, COMENTARIO_NUEVO, ESTADO_REPORTE, ALERTA_IMPORTANTE ]
          example: "REPORTE_NUEVO"
        leida:
          type: boolean
          example: false
        fecha:
          type: string
          format: date-time
          example: "2025-04-02T14:30:00Z"
        usuarioId:
          type: string
          example: "660a91ef2a81f0001f77a0a2"
        reporteId:
          type: string
          example: "660b29f76e4027001f3a9b03"


    NotificacionRespuesta:
      type: object
      properties:
        id:
          type: string
        mensaje:
          type: string
        tipo:
          type: string
        leida:
          type: boolean
        fecha:
          type: string
          format: date-time
        usuarioId:
          type: string
        reporteId:
          type: string


    Ubicacion:
      type: object
      required:
        - latitud
        - longitud
      properties:
        latitud:
          type: number
          format: float
          description: "Latitud geográfica"
          example: 4.533333
        longitud:
          type: number
          format: float
          description: "Longitud geográfica"
          example: -75.681106

    AdminLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string

    Categorias:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        active:
          type: boolean

    CategoriaRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string